# NIST SP 800-115 Dataset Module

class NISTSP800115Dataset:
    def __init__(self):
        self.sections = [
            "Planning",
            "Discovery",
            "Attack",
            "Reporting"
        ]
        self.technical_guidelines = {}

    def get_sections(self):
        return self.sections

    def get_section_details(self, section):
        details = {
            "Planning": "Includes determining the scope and rules of engagement, identifying resources, and defining logistics for the assessment.",
            "Discovery": "Involves information gathering and vulnerability identification using various techniques and tools.",
            "Attack": "Encompasses vulnerability validation and exploitation to determine the actual risk and impact of identified vulnerabilities.",
            "Reporting": "Focuses on documenting and presenting the findings, including recommendations for remediation."
        }
        return details.get(section, "Details not available.")

    def get_technical_guidelines(self):
        self.technical_guidelines = {
            "Review Techniques": [
                "Documentation Review",
                "Log Review",
                "Ruleset Review",
                "System Configuration Review",
                "Network Sniffing",
                "File Integrity Checking"
            ],
            "Target Identification and Analysis": [
                "Network Discovery",
                "Network Port and Service Identification",
                "Vulnerability Scanning",
                "Wireless Scanning"
            ],
            "Target Vulnerability Validation": [
                "Password Cracking",
                "Penetration Testing",
                "Social Engineering"
            ],
            "Security Assessment Tools": [
                "Vulnerability Scanners",
                "Network Scanners and Analyzers",
                "Wireless Scanners and Analyzers",
                "Application Scanners",
                "Exploitation Tools"
            ],
            "Factors for Selecting Assessment Techniques": [
                "System Impact",
                "Access",
                "Results",
                "Resource Requirements",
                "Risks"
            ]
        }
        return self.technical_guidelines

    def generate_sample_data(self):
        sample_data = []
        for section in self.sections:
            details = self.get_section_details(section)
            sample_data.append(f"Section: {section}\nDetails: {details}\n")

        guidelines = self.get_technical_guidelines()
        for category, items in guidelines.items():
            sample_data.append(f"Category: {category}\nItems: {', '.join(items)}\n")

        return "\n".join(sample_data)

# Example usage
if __name__ == "__main__":
    nist_sp800_115 = NISTSP800115Dataset()
    print("NIST SP 800-115 Sections:", nist_sp800_115.get_sections())
    print("\nDetails of Discovery:", nist_sp800_115.get_section_details("Discovery"))
    print("\nTechnical Guidelines:", nist_sp800_115.get_technical_guidelines())
    print("\nSample Data:")
    print(nist_sp800_115.generate_sample_data())
